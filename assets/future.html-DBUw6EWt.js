import{_ as n,r as s,o as i,c,b as e,d as o,e as r,a}from"./app-Dh3YGII_.js";const d={},l=a('<h1 id="展望未来" tabindex="-1"><a class="header-anchor" href="#展望未来" aria-hidden="true">#</a> 展望未来</h1><blockquote><p>未来是美好的，也是不确定的，让我们共同期待 <code>YukiHookAPI</code> 在未来的发展空间。</p></blockquote><h2 id="未解决的问题" tabindex="-1"><a class="header-anchor" href="#未解决的问题" aria-hidden="true">#</a> 未解决的问题</h2><blockquote><p>这里收录了 <code>YukiHookAPI</code> 尚未解决的问题。</p></blockquote><h3 id="yukihookprefsbridge" tabindex="-1"><a class="header-anchor" href="#yukihookprefsbridge" aria-hidden="true">#</a> YukiHookPrefsBridge</h3><p>目前仅限完美支持 LSPosed，其它 Xposed 框架需要降级模块 API。</p><p>可能完全不支持太极，太极在高版本系统上需要更低的 API 才能适配。</p><p>部分 Xposed 模块开发者目前选择 Hook 目标 APP 内置 Sp 存储方案解决模块设置共享问题。</p><p>后期 Android 系统的权限将越来越严格，<code>selinux</code> 就是目前面临的一个大问题，有待讨论和研究。</p>',9),h={class:"custom-container tip"},p=e("p",{class:"custom-container-title"},"2023.10.06 更新",-1),u={href:"https://github.com/libxposed",target:"_blank",rel:"noopener noreferrer"},_=e("p",null,[o("为了保证大部分模块的兼容性，后期 "),e("strong",null,"YukiHookAPI"),o(" 计划使用自定义的 ContentProvider 实现模块与宿主的数据互通，敬请期待。")],-1),k=a('<h2 id="未来的计划" tabindex="-1"><a class="header-anchor" href="#未来的计划" aria-hidden="true">#</a> 未来的计划</h2><blockquote><p>这里收录了 <code>YukiHookAPI</code> 可能会在后期添加的功能。</p></blockquote><h3 id="支持独立使用的-lite-版本" tabindex="-1"><a class="header-anchor" href="#支持独立使用的-lite-版本" aria-hidden="true">#</a> 支持独立使用的 Lite 版本</h3><p>如果你喜欢 <code>YukiHookAPI</code> 的反射 API，但你的项目可能并不需要相关 Hook 功能。</p><p>那么这里有一个好消息要告诉你：</p>',5),f=e("code",null,"YukiHookAPI",-1),b={href:"https://github.com/HighCapable/YukiReflection",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"YukiReflection",-1),P={href:"https://github.com/HighCapable/KavaRef",target:"_blank",rel:"noopener noreferrer"},A=a('<div class="custom-container tip"><p class="custom-container-title">待讨论</p><p>目前 API 只支持通过自动处理程序绑定到 <strong>xposed_init</strong>，若您不喜欢自动处理程序，一定要自己实现模块装载入口，未来会按照需求人数推出仅有 API 功能的 Lite 版本，你可向我们提出 <strong>issues</strong>。</p></div><p>API 已经提供了 Xposed 原生 API 监听接口，你可以 <a href="../config/xposed-using#%E5%8E%9F%E7%94%9F-xposed-api-%E4%BA%8B%E4%BB%B6">在这里</a> 找到或查看 Demo 的实现方法。</p><h3 id="里程碑计划" tabindex="-1"><a class="header-anchor" href="#里程碑计划" aria-hidden="true">#</a> 里程碑计划</h3><p>下方这些计划已在 GitHub 的 <code>issues</code> 中发布，你可以查看每个项目的进度。</p><p>所有功能预计在 <code>2.0.0</code> 版本完成，敬请期待。</p>',5),H={href:"https://github.com/HighCapable/YukiHookAPI/issues/49",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/HighCapable/YukiHookAPI/issues/48",target:"_blank",rel:"noopener noreferrer"},I={href:"https://github.com/HighCapable/YukiHookAPI/issues/33",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/HighCapable/KavaRef",target:"_blank",rel:"noopener noreferrer"};function Y(v,C){const t=s("ExternalLinkIcon");return i(),c("div",null,[l,e("div",h,[p,e("p",null,[o("LSPosed 现已实验性推出了 "),e("a",u,[o("Modern Xposed API"),r(t)]),o("，它采用 Service 的方式与模块通信，这将能够解决模块数据存储的问题。")]),_]),k,e("p",null,[e("s",null,[f,o(" 的核心反射 API 已被解耦合为 "),e("a",b,[o("YukiReflection"),r(t)]),o(" 项目，它现在能在任何 Android 项目中使用。")])]),e("p",null,[g,o(" 项目由于很多未能解决的黑盒问题已被弃用，我们不再推荐任何人使用它，现在请迁移到全新设计的 "),e("a",P,[o("KavaRef"),r(t)]),o("。")]),A,e("ul",null,[e("li",null,[e("a",H,[o("New Xposed Module Config Plan"),r(t)])]),e("li",null,[e("a",m,[o("New Hook Entry Class"),r(t)])]),e("li",null,[e("s",null,[e("a",I,[o("New Hook Code Style"),r(t)])]),o(" (已由 "),e("a",x,[o("KavaRef"),r(t)]),o(" 取代)")])])])}const E=n(d,[["render",Y],["__file","future.html.vue"]]);export{E as default};
