import{_ as e,o,c as t,a as i}from"./app-Dh3YGII_.js";const n={},c=i('<h1 id="document-introduce" tabindex="-1"><a class="header-anchor" href="#document-introduce" aria-hidden="true">#</a> Document Introduce</h1><blockquote><p>The document here will synchronize the relevant usage of the latest API version, please keep <code>YukiHookAPI</code> as the latest version to use the latest version of the function.</p></blockquote><div class="custom-container warning"><p class="custom-container-title">Notice</p><p>Due to maintenance costs, the <code>YukiHookAPI</code> will no longer update this document from version <code>1.3.0</code> and switch to the API document automatically generated by the Dokka plugin in version <code>2.0.0</code>. If you encounter unsolvable problems, you can contact us via <a href="../about/contacts">Contact Us</a>.</p></div><h2 id="function-description" tabindex="-1"><a class="header-anchor" href="#function-description" aria-hidden="true">#</a> Function Description</h2><blockquote><p>The function description mainly introduces the related usage and purpose of the current API.</p></blockquote><h2 id="function-example-description" tabindex="-1"><a class="header-anchor" href="#function-example-description" aria-hidden="true">#</a> Function Example Description</h2><blockquote><p>The function examples mainly show the basic usage examples of the current API for reference.</p></blockquote><h2 id="change-record-description" tabindex="-1"><a class="header-anchor" href="#change-record-description" aria-hidden="true">#</a> Change Record Description</h2><p>The function of the first version will be marked as <code>v&lt;version&gt;</code> <code>first</code>;</p><p>New function added later will be marked as <code>v&lt;version&gt;</code> <code>added</code>;</p><p>Later modified function will be appended as <code>v&lt;version&gt;</code> <code>modified</code>;</p><p>Later deprecated function will be marked as <code>v&lt;version&gt;</code> <code>deprecated</code> and strikethrough;</p><p>Later removed function will be marked as <code>v&lt;version&gt;</code> <code>removed</code> and strikethrough.</p><h2 id="related-symbols-description" tabindex="-1"><a class="header-anchor" href="#related-symbols-description" aria-hidden="true">#</a> Related Symbols Description</h2><ul><li><p><em>kt</em>  Kotlin Static File</p></li><li><p><em>annotation</em>  Annotation Class</p></li><li><p><em>interface</em>  Interface Class</p></li><li><p><em>object</em>  Class (Singleton)</p></li><li><p><em>class</em>  Class</p></li><li><p><em>field</em>  Field or <code>get</code> / <code>set</code> method or read-only <code>get</code> method</p></li><li><p><em>method</em>  Method</p></li><li><p><em>enum</em>  Enum constant</p></li><li><p><em>ext-field</em>  Extension field (global)</p></li><li><p><em>ext-method</em>  Extension method (global)</p></li><li><p><em>i-ext-field</em>  Extension field (internal)</p></li><li><p><em>i-ext-method</em>  Extension method (internal)</p></li></ul>',15),a=[c];function d(r,l){return o(),t("div",null,a)}const p=e(n,[["render",d],["__file","home.html.vue"]]);export{p as default};
