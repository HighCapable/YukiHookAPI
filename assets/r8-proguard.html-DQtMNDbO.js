import{_ as e,o as a,c as o,a as r}from"./app-Dh3YGII_.js";const d={},s=r(`<h1 id="r8-与-proguard-混淆" tabindex="-1"><a class="header-anchor" href="#r8-与-proguard-混淆" aria-hidden="true">#</a> R8 与 Proguard 混淆</h1><blockquote><p>大部分场景下 Xposed 模块可通过原生混淆压缩体积，这里介绍了混淆的配置方法。</p></blockquote><h2 id="r8" tabindex="-1"><a class="header-anchor" href="#r8" aria-hidden="true">#</a> R8</h2><blockquote><p>如果你使用的是 <code>R8</code>，那么你无需对 <code>YukiHookAPI</code> 进行任何特殊配置。</p></blockquote><h2 id="proguard" tabindex="-1"><a class="header-anchor" href="#proguard" aria-hidden="true">#</a> Proguard</h2><blockquote><p><s>如果你仍然在使用 <code>Proguard</code>，你需要做一些规则配置。</s></p></blockquote><div class="custom-container danger"><p class="custom-container-title">特别注意</p><p>Proguard 规则已被弃用，请不要再使用，自从 Android Gradle Plugin 4.2 后，拥有 Android Jetpack 套件最新版本的混淆处理程序默认均为 <strong>R8</strong>，不再需要考虑混淆的问题。</p></div><p>若要在任何版本下启用 <code>R8</code>，请在 <code>gradle.properties</code> 文件中加入如下规则，Android Gradle Plugin 7.0 及以上版本无需任何配置。</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="shiki github-dark-dimmed" style="background-color:#22272e;" tabindex="0"><code><span class="line"><span style="color:#ADBAC7;">android</span><span style="color:#F47067;">.</span><span style="color:#ADBAC7;">enableR8</span><span style="color:#F47067;">=</span><span style="color:#6CB6FF;">true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,9),n=[s];function c(t,i){return a(),o("div",null,n)}const p=e(d,[["render",c],["__file","r8-proguard.html.vue"]]);export{p as default};
